// <auto-generated />
using System;
using HotelOazis.Models.DbConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelOazis.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20250219153830_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03eb4335-6cde-4615-ab53-9f0e41396b90"),
                            CheckInDate = new DateTime(2025, 2, 25, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6019),
                            CheckOutDate = new DateTime(2025, 3, 5, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6029),
                            RoomId = new Guid("926accff-5d05-458f-a382-b456276bc888"),
                            UserId = new Guid("16130dfe-44a8-4fcd-9e85-b660abf3bd30")
                        },
                        new
                        {
                            Id = new Guid("8e645159-207f-4184-a175-c80edbd4164a"),
                            CheckInDate = new DateTime(2025, 2, 25, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6033),
                            CheckOutDate = new DateTime(2025, 3, 6, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6034),
                            RoomId = new Guid("b4013462-e72b-4372-81e7-a6bb511d7575"),
                            UserId = new Guid("16130dfe-44a8-4fcd-9e85-b660abf3bd30")
                        },
                        new
                        {
                            Id = new Guid("a3f0599c-889e-4f5c-96f5-88b940121efd"),
                            CheckInDate = new DateTime(2025, 2, 26, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6036),
                            CheckOutDate = new DateTime(2025, 3, 7, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6036),
                            RoomId = new Guid("687d1abc-8703-4e3b-8fb8-070ff692b652"),
                            UserId = new Guid("d75bd6bf-9c77-4da2-8a0d-ca8b626634a1")
                        },
                        new
                        {
                            Id = new Guid("7d97f290-8721-4eaf-8ff3-506dcf5ae297"),
                            CheckInDate = new DateTime(2025, 2, 20, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6042),
                            CheckOutDate = new DateTime(2025, 3, 9, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6043),
                            RoomId = new Guid("0ecdd12b-ba6a-4543-a24f-7233708a0049"),
                            UserId = new Guid("d75bd6bf-9c77-4da2-8a0d-ca8b626634a1")
                        },
                        new
                        {
                            Id = new Guid("7a8303b0-480c-485a-b1bf-4b607605092f"),
                            CheckInDate = new DateTime(2025, 2, 23, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6045),
                            CheckOutDate = new DateTime(2025, 3, 3, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6045),
                            RoomId = new Guid("6a6ab7f8-94d1-4266-b1a2-be52e3492fc0"),
                            UserId = new Guid("1c2e67d4-af46-43dc-8263-07677ecfcc05")
                        },
                        new
                        {
                            Id = new Guid("318bb342-0389-4106-8d53-65ce6dccc713"),
                            CheckInDate = new DateTime(2025, 2, 26, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6048),
                            CheckOutDate = new DateTime(2025, 3, 10, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6049),
                            RoomId = new Guid("ad970ff0-5807-4224-bf87-3c819c40a1cf"),
                            UserId = new Guid("1c2e67d4-af46-43dc-8263-07677ecfcc05")
                        },
                        new
                        {
                            Id = new Guid("a0cb3055-6151-4c1b-9862-99ee45285405"),
                            CheckInDate = new DateTime(2025, 2, 22, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6050),
                            CheckOutDate = new DateTime(2025, 3, 9, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6051),
                            RoomId = new Guid("2c2dd768-674f-4521-a9d9-d16fee6c9bb0"),
                            UserId = new Guid("71fd4d6b-cbd2-4ebb-b5ee-219c3f18f559")
                        },
                        new
                        {
                            Id = new Guid("32ad5279-2006-486c-a2c3-87e89e5629c7"),
                            CheckInDate = new DateTime(2025, 2, 21, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6053),
                            CheckOutDate = new DateTime(2025, 3, 6, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6053),
                            RoomId = new Guid("be9c3511-252e-489b-954f-6acca8b6a99c"),
                            UserId = new Guid("71fd4d6b-cbd2-4ebb-b5ee-219c3f18f559")
                        },
                        new
                        {
                            Id = new Guid("17400946-4310-4442-9f19-4c2d1ac53f06"),
                            CheckInDate = new DateTime(2025, 2, 24, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6055),
                            CheckOutDate = new DateTime(2025, 3, 8, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6056),
                            RoomId = new Guid("9222ec31-5f3e-42d1-92a3-1a5adb6bd9fa"),
                            UserId = new Guid("fad98ae2-7f13-4358-8fa3-ff643da319ea")
                        },
                        new
                        {
                            Id = new Guid("007fe70a-dfe1-4c3f-97ae-42581f452258"),
                            CheckInDate = new DateTime(2025, 2, 28, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6059),
                            CheckOutDate = new DateTime(2025, 3, 3, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6059),
                            RoomId = new Guid("761c2528-1422-4af2-a31a-016c7befa34e"),
                            UserId = new Guid("fad98ae2-7f13-4358-8fa3-ff643da319ea")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MessageStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73dbe979-d1cf-4950-9bdf-0fd924b87f14"),
                            Message = "Amazing stay! AliceSmith had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6128),
                            Rating = 4,
                            UserId = new Guid("16130dfe-44a8-4fcd-9e85-b660abf3bd30")
                        },
                        new
                        {
                            Id = new Guid("4d900cad-7daa-423e-90d0-bd2222754fcc"),
                            Message = "Amazing stay! BobJohnson had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6138),
                            Rating = 4,
                            UserId = new Guid("d75bd6bf-9c77-4da2-8a0d-ca8b626634a1")
                        },
                        new
                        {
                            Id = new Guid("716acbfc-19c3-479a-b4a7-be7f67a6ca2a"),
                            Message = "Amazing stay! CharlieBrown had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6141),
                            Rating = 4,
                            UserId = new Guid("1c2e67d4-af46-43dc-8263-07677ecfcc05")
                        },
                        new
                        {
                            Id = new Guid("6dc36277-da5b-4a3c-8bf7-475783c4d645"),
                            Message = "Amazing stay! DianaWhite had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6145),
                            Rating = 4,
                            UserId = new Guid("71fd4d6b-cbd2-4ebb-b5ee-219c3f18f559")
                        },
                        new
                        {
                            Id = new Guid("a66dee05-14aa-4c0e-a077-b91b11f041a8"),
                            Message = "Amazing stay! EdwardBlack had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 15, 38, 29, 893, DateTimeKind.Utc).AddTicks(6148),
                            Rating = 4,
                            UserId = new Guid("fad98ae2-7f13-4358-8fa3-ff643da319ea")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelOazis.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("926accff-5d05-458f-a382-b456276bc888"),
                            Description = "Cozy single room with a city view.",
                            IsAvailable = true,
                            Number = 101,
                            Picture = "https://example.com/room101.jpg",
                            Price = 80.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b4013462-e72b-4372-81e7-a6bb511d7575"),
                            Description = "Spacious double room with modern amenities.",
                            IsAvailable = true,
                            Number = 102,
                            Picture = "https://example.com/room102.jpg",
                            Price = 120.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("687d1abc-8703-4e3b-8fb8-070ff692b652"),
                            Description = "Luxury suite with a king-sized bed and ocean view.",
                            IsAvailable = true,
                            Number = 103,
                            Picture = "https://example.com/room103.jpg",
                            Price = 200.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("0ecdd12b-ba6a-4543-a24f-7233708a0049"),
                            Description = "Comfortable single room with free Wi-Fi.",
                            IsAvailable = true,
                            Number = 104,
                            Picture = "https://example.com/room104.jpg",
                            Price = 75.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6a6ab7f8-94d1-4266-b1a2-be52e3492fc0"),
                            Description = "Elegant double room with a balcony.",
                            IsAvailable = true,
                            Number = 105,
                            Picture = "https://example.com/room105.jpg",
                            Price = 130.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ad970ff0-5807-4224-bf87-3c819c40a1cf"),
                            Description = "Premium suite with a private hot tub.",
                            IsAvailable = true,
                            Number = 106,
                            Picture = "https://example.com/room106.jpg",
                            Price = 220.00m,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("2c2dd768-674f-4521-a9d9-d16fee6c9bb0"),
                            Description = "Modern single room with a work desk.",
                            IsAvailable = true,
                            Number = 107,
                            Picture = "https://example.com/room107.jpg",
                            Price = 85.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("be9c3511-252e-489b-954f-6acca8b6a99c"),
                            Description = "Stylish double room with a city skyline view.",
                            IsAvailable = true,
                            Number = 108,
                            Picture = "https://example.com/room108.jpg",
                            Price = 140.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("9222ec31-5f3e-42d1-92a3-1a5adb6bd9fa"),
                            Description = "Exclusive suite with a private lounge area.",
                            IsAvailable = true,
                            Number = 109,
                            Picture = "https://example.com/room109.jpg",
                            Price = 250.00m,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("761c2528-1422-4af2-a31a-016c7befa34e"),
                            Description = "Charming double room with artistic decor.",
                            IsAvailable = true,
                            Number = 110,
                            Picture = "https://example.com/room110.jpg",
                            Price = 135.00m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a1a09fc-5f29-45ed-a794-1fad24597abd"),
                            Description = "Relaxing full-body spa experience.",
                            Name = "Spa Treatment"
                        },
                        new
                        {
                            Id = new Guid("ee8f86ba-e261-4fd4-ba5a-6c3b383df3bd"),
                            Description = "Unlimited access to our state-of-the-art fitness center.",
                            Name = "Gym Access"
                        },
                        new
                        {
                            Id = new Guid("4167be50-ee86-4e74-b743-8a17b053d02e"),
                            Description = "Convenient transport to and from the airport.",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            Id = new Guid("6bd7de13-2384-4040-ac4d-6f1840085062"),
                            Description = "Delicious breakfast with a variety of options.",
                            Name = "Breakfast Buffet"
                        },
                        new
                        {
                            Id = new Guid("03af2fd6-5231-4ef7-b7ed-c189f9a902c4"),
                            Description = "24/7 room service with gourmet meals.",
                            Name = "Room Service"
                        },
                        new
                        {
                            Id = new Guid("9fc7af7d-4e73-430f-9b73-e1f43bcb1d6f"),
                            Description = "Same-day laundry and dry-cleaning services.",
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = new Guid("f3187c2a-4d47-4378-a7b7-d56afee5980a"),
                            Description = "Guided tour of local attractions.",
                            Name = "City Tour"
                        },
                        new
                        {
                            Id = new Guid("aaa107e9-e46f-443e-b0cc-83905fb229fc"),
                            Description = "High-speed internet available in all areas.",
                            Name = "Wi-Fi Access"
                        },
                        new
                        {
                            Id = new Guid("7691ecd6-b65a-47b1-8727-29e5877b10eb"),
                            Description = "Fully equipped meeting and conference facilities.",
                            Name = "Conference Room"
                        },
                        new
                        {
                            Id = new Guid("ab40bf45-beef-4675-8081-ec6a59a86219"),
                            Description = "Access to our indoor heated pool.",
                            Name = "Swimming Pool"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16130dfe-44a8-4fcd-9e85-b660abf3bd30"),
                            Age = 28,
                            AvatarUrl = "https://example.com/avatar1.jpg",
                            Email = "alice@example.com",
                            Password = "hashedpassword",
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("d75bd6bf-9c77-4da2-8a0d-ca8b626634a1"),
                            Age = 35,
                            AvatarUrl = "https://example.com/avatar2.jpg",
                            Email = "bob@example.com",
                            Password = "hashedpassword",
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("1c2e67d4-af46-43dc-8263-07677ecfcc05"),
                            Age = 40,
                            AvatarUrl = "https://example.com/avatar3.jpg",
                            Email = "charlie@example.com",
                            Password = "hashedpassword",
                            Username = "CharlieBrown"
                        },
                        new
                        {
                            Id = new Guid("71fd4d6b-cbd2-4ebb-b5ee-219c3f18f559"),
                            Age = 30,
                            AvatarUrl = "https://example.com/avatar4.jpg",
                            Email = "diana@example.com",
                            Password = "hashedpassword",
                            Username = "DianaWhite"
                        },
                        new
                        {
                            Id = new Guid("fad98ae2-7f13-4358-8fa3-ff643da319ea"),
                            Age = 33,
                            AvatarUrl = "https://example.com/avatar5.jpg",
                            Email = "edward@example.com",
                            Password = "hashedpassword",
                            Username = "EdwardBlack"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.HasOne("HotelOazis.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.HasOne("HotelOazis.Models.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
