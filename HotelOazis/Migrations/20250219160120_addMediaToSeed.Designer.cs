// <auto-generated />
using System;
using HotelOazis.Models.DbConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelOazis.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20250219160120_addMediaToSeed")]
    partial class addMediaToSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32cac2ca-bc7b-4a72-8298-bf148a910f1b"),
                            CheckInDate = new DateTime(2025, 2, 26, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6653),
                            CheckOutDate = new DateTime(2025, 3, 6, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6661),
                            RoomId = new Guid("27bbfcd2-71f7-4139-b0d2-f68fb9a6fd1b"),
                            UserId = new Guid("9dea0857-7d36-476b-a050-9945fdf44c11")
                        },
                        new
                        {
                            Id = new Guid("87fdd6f8-def3-49ee-9a1f-891c990cff58"),
                            CheckInDate = new DateTime(2025, 2, 27, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6671),
                            CheckOutDate = new DateTime(2025, 3, 9, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6671),
                            RoomId = new Guid("be016646-e0f0-4b7a-bce5-d111f818f5d6"),
                            UserId = new Guid("9dea0857-7d36-476b-a050-9945fdf44c11")
                        },
                        new
                        {
                            Id = new Guid("ec4a66aa-873c-4c49-acb8-f142377d60a0"),
                            CheckInDate = new DateTime(2025, 2, 28, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6675),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6675),
                            RoomId = new Guid("743c241e-939e-4356-b045-f9fb09e26198"),
                            UserId = new Guid("242983ba-944c-4d10-9352-46549f6ee28c")
                        },
                        new
                        {
                            Id = new Guid("c0db48f9-1988-4a34-94a1-4d90c80dce6c"),
                            CheckInDate = new DateTime(2025, 2, 21, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6678),
                            CheckOutDate = new DateTime(2025, 3, 8, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6679),
                            RoomId = new Guid("8719283f-b7bb-43ea-b297-9b0b5ad62515"),
                            UserId = new Guid("242983ba-944c-4d10-9352-46549f6ee28c")
                        },
                        new
                        {
                            Id = new Guid("906dca96-d20f-44c9-85f0-89427390ee45"),
                            CheckInDate = new DateTime(2025, 2, 21, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6683),
                            CheckOutDate = new DateTime(2025, 3, 6, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6683),
                            RoomId = new Guid("ab6b9572-0c6a-40c0-9d77-acc12a18b376"),
                            UserId = new Guid("03daa929-f93f-4ef2-a2ee-94c353ad546f")
                        },
                        new
                        {
                            Id = new Guid("35ce2023-b565-44f3-9e6e-77e61c5f84fd"),
                            CheckInDate = new DateTime(2025, 2, 24, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6702),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6702),
                            RoomId = new Guid("94b77448-9596-4762-a1a8-d3628d36842b"),
                            UserId = new Guid("03daa929-f93f-4ef2-a2ee-94c353ad546f")
                        },
                        new
                        {
                            Id = new Guid("c322a134-b384-4fac-9301-932c62930303"),
                            CheckInDate = new DateTime(2025, 2, 22, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6706),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6706),
                            RoomId = new Guid("68087e4d-171d-4108-b03b-f113c8910ab7"),
                            UserId = new Guid("2db2afc8-43b0-4568-8582-dff7e7b9d47e")
                        },
                        new
                        {
                            Id = new Guid("54bc020f-0aef-4c8a-908e-84b0a54e2167"),
                            CheckInDate = new DateTime(2025, 2, 25, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6709),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6710),
                            RoomId = new Guid("a84bcd58-b3da-4a05-9827-16d1657b1fdd"),
                            UserId = new Guid("2db2afc8-43b0-4568-8582-dff7e7b9d47e")
                        },
                        new
                        {
                            Id = new Guid("c5f783b1-911e-4e1d-b64f-fda598817c9e"),
                            CheckInDate = new DateTime(2025, 2, 22, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6713),
                            CheckOutDate = new DateTime(2025, 3, 8, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6713),
                            RoomId = new Guid("5b9e4cf4-3f9e-4c90-9f49-ef84414b10fc"),
                            UserId = new Guid("074b100e-a9f8-457c-b78f-2ed551a49562")
                        },
                        new
                        {
                            Id = new Guid("8635a81a-78f0-405b-a26c-043eb9a70807"),
                            CheckInDate = new DateTime(2025, 2, 22, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6717),
                            CheckOutDate = new DateTime(2025, 3, 10, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6717),
                            RoomId = new Guid("01d6a50b-30fb-4122-8ad6-79c392a57681"),
                            UserId = new Guid("074b100e-a9f8-457c-b78f-2ed551a49562")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MessageStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0f6b635-a807-4c95-aaa9-06db9834dd6f"),
                            Message = "Amazing stay! AliceSmith had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6824),
                            Rating = 5,
                            UserId = new Guid("9dea0857-7d36-476b-a050-9945fdf44c11")
                        },
                        new
                        {
                            Id = new Guid("36821a6e-94b3-404d-be5e-cc6e2b566b81"),
                            Message = "Amazing stay! BobJohnson had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6832),
                            Rating = 5,
                            UserId = new Guid("242983ba-944c-4d10-9352-46549f6ee28c")
                        },
                        new
                        {
                            Id = new Guid("a01dd1c3-3e64-429d-a637-4a846ce64bbb"),
                            Message = "Amazing stay! CharlieBrown had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6862),
                            Rating = 5,
                            UserId = new Guid("03daa929-f93f-4ef2-a2ee-94c353ad546f")
                        },
                        new
                        {
                            Id = new Guid("2cca1704-a2f7-421b-8f52-23a594048e72"),
                            Message = "Amazing stay! DianaWhite had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6872),
                            Rating = 5,
                            UserId = new Guid("2db2afc8-43b0-4568-8582-dff7e7b9d47e")
                        },
                        new
                        {
                            Id = new Guid("7d9fbde6-2cec-4408-8578-adf05fbc1438"),
                            Message = "Amazing stay! EdwardBlack had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 1, 19, 212, DateTimeKind.Utc).AddTicks(6880),
                            Rating = 5,
                            UserId = new Guid("074b100e-a9f8-457c-b78f-2ed551a49562")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelOazis.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27bbfcd2-71f7-4139-b0d2-f68fb9a6fd1b"),
                            Description = "Cozy single room with a city view.",
                            IsAvailable = true,
                            Number = 101,
                            Picture = "System.Drawing.Bitmap",
                            Price = 80.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("be016646-e0f0-4b7a-bce5-d111f818f5d6"),
                            Description = "Spacious double room with modern amenities.",
                            IsAvailable = true,
                            Number = 102,
                            Picture = "System.Drawing.Bitmap",
                            Price = 120.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("743c241e-939e-4356-b045-f9fb09e26198"),
                            Description = "Luxury suite with a king-sized bed and ocean view.",
                            IsAvailable = true,
                            Number = 103,
                            Picture = "System.Drawing.Bitmap",
                            Price = 200.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("8719283f-b7bb-43ea-b297-9b0b5ad62515"),
                            Description = "Comfortable single room with free Wi-Fi.",
                            IsAvailable = true,
                            Number = 104,
                            Picture = "System.Drawing.Bitmap",
                            Price = 75.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ab6b9572-0c6a-40c0-9d77-acc12a18b376"),
                            Description = "Elegant double room with a balcony.",
                            IsAvailable = true,
                            Number = 105,
                            Picture = "System.Drawing.Bitmap",
                            Price = 130.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("94b77448-9596-4762-a1a8-d3628d36842b"),
                            Description = "Premium suite with a private hot tub.",
                            IsAvailable = true,
                            Number = 106,
                            Picture = "System.Drawing.Bitmap",
                            Price = 220.00m,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("68087e4d-171d-4108-b03b-f113c8910ab7"),
                            Description = "Modern single room with a work desk.",
                            IsAvailable = true,
                            Number = 107,
                            Picture = "System.Drawing.Bitmap",
                            Price = 85.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a84bcd58-b3da-4a05-9827-16d1657b1fdd"),
                            Description = "Stylish double room with a city skyline view.",
                            IsAvailable = true,
                            Number = 108,
                            Picture = "System.Drawing.Bitmap",
                            Price = 140.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("5b9e4cf4-3f9e-4c90-9f49-ef84414b10fc"),
                            Description = "Exclusive suite with a private lounge area.",
                            IsAvailable = true,
                            Number = 109,
                            Picture = "System.Drawing.Bitmap",
                            Price = 250.00m,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("01d6a50b-30fb-4122-8ad6-79c392a57681"),
                            Description = "Charming double room with artistic decor.",
                            IsAvailable = true,
                            Number = 110,
                            Picture = "System.Drawing.Bitmap",
                            Price = 135.00m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80d364e8-cde8-461d-ba9b-6f64f3d03e49"),
                            Description = "Relaxing full-body spa experience.",
                            Name = "Spa Treatment"
                        },
                        new
                        {
                            Id = new Guid("5b4be7ff-9a22-477e-ab74-53da3311304b"),
                            Description = "Unlimited access to our state-of-the-art fitness center.",
                            Name = "Gym Access"
                        },
                        new
                        {
                            Id = new Guid("b170a7d4-c667-44da-9960-82859f7284b1"),
                            Description = "Convenient transport to and from the airport.",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            Id = new Guid("cd47da36-6eb0-41a0-abf5-b598ee312664"),
                            Description = "Delicious breakfast with a variety of options.",
                            Name = "Breakfast Buffet"
                        },
                        new
                        {
                            Id = new Guid("905cc535-6ed9-41d3-a974-ecf9bf2498c6"),
                            Description = "24/7 room service with gourmet meals.",
                            Name = "Room Service"
                        },
                        new
                        {
                            Id = new Guid("e1a513f4-1e70-4a87-8bbe-1d4c7c8f9007"),
                            Description = "Same-day laundry and dry-cleaning services.",
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = new Guid("6ee972ef-08ff-451e-abdb-dd70aaabce4c"),
                            Description = "Guided tour of local attractions.",
                            Name = "City Tour"
                        },
                        new
                        {
                            Id = new Guid("b1e5b5c4-3e78-4c3f-8ecd-0e91a5dc63fc"),
                            Description = "High-speed internet available in all areas.",
                            Name = "Wi-Fi Access"
                        },
                        new
                        {
                            Id = new Guid("ef464667-1c16-4518-8e2d-b74ad057d664"),
                            Description = "Fully equipped meeting and conference facilities.",
                            Name = "Conference Room"
                        },
                        new
                        {
                            Id = new Guid("25382f6e-b58b-4048-ad83-6f8d848ad4ce"),
                            Description = "Access to our indoor heated pool.",
                            Name = "Swimming Pool"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dea0857-7d36-476b-a050-9945fdf44c11"),
                            Age = 28,
                            AvatarUrl = "System.Drawing.Bitmap",
                            Email = "alice@example.com",
                            Password = "hashedpassword",
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("242983ba-944c-4d10-9352-46549f6ee28c"),
                            Age = 35,
                            AvatarUrl = "System.Drawing.Bitmap",
                            Email = "bob@example.com",
                            Password = "hashedpassword",
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("03daa929-f93f-4ef2-a2ee-94c353ad546f"),
                            Age = 40,
                            AvatarUrl = "System.Drawing.Bitmap",
                            Email = "charlie@example.com",
                            Password = "hashedpassword",
                            Username = "CharlieBrown"
                        },
                        new
                        {
                            Id = new Guid("2db2afc8-43b0-4568-8582-dff7e7b9d47e"),
                            Age = 30,
                            AvatarUrl = "System.Drawing.Bitmap",
                            Email = "diana@example.com",
                            Password = "hashedpassword",
                            Username = "DianaWhite"
                        },
                        new
                        {
                            Id = new Guid("074b100e-a9f8-457c-b78f-2ed551a49562"),
                            Age = 33,
                            AvatarUrl = "System.Drawing.Bitmap",
                            Email = "edward@example.com",
                            Password = "hashedpassword",
                            Username = "EdwardBlack"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.HasOne("HotelOazis.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.HasOne("HotelOazis.Models.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
