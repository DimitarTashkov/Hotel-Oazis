// <auto-generated />
using System;
using HotelOazis.Models.DbConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelOazis.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20250219160601_fixMediaSeed")]
    partial class fixMediaSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b12ee2fe-7734-4ce9-89e6-def4db28be77"),
                            CheckInDate = new DateTime(2025, 2, 20, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(518),
                            CheckOutDate = new DateTime(2025, 3, 8, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(528),
                            RoomId = new Guid("2a8738e1-49b3-4bc7-a66c-2b288553a186"),
                            UserId = new Guid("a751c353-65a2-4071-908f-eaac110f174a")
                        },
                        new
                        {
                            Id = new Guid("b177b9dc-96e4-4c1d-af1b-55ded58e6cc0"),
                            CheckInDate = new DateTime(2025, 2, 23, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(534),
                            CheckOutDate = new DateTime(2025, 3, 8, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(535),
                            RoomId = new Guid("a29813fb-af91-4a35-94dd-d3a9cd79cbcc"),
                            UserId = new Guid("a751c353-65a2-4071-908f-eaac110f174a")
                        },
                        new
                        {
                            Id = new Guid("1c706a82-6c42-4040-86ba-d5f00d53b3a4"),
                            CheckInDate = new DateTime(2025, 2, 20, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(537),
                            CheckOutDate = new DateTime(2025, 3, 10, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(537),
                            RoomId = new Guid("868e8158-15af-4e66-bfb9-b587bcbd0341"),
                            UserId = new Guid("7113759c-a0b6-426a-a198-eef3138f180b")
                        },
                        new
                        {
                            Id = new Guid("9e631902-41e5-44f1-b60c-c2e251ddaa4b"),
                            CheckInDate = new DateTime(2025, 2, 25, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(539),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(539),
                            RoomId = new Guid("41f40c30-c38d-4226-910b-a0732e5f2d7d"),
                            UserId = new Guid("7113759c-a0b6-426a-a198-eef3138f180b")
                        },
                        new
                        {
                            Id = new Guid("3ce15e72-cf24-4625-89b8-70bfb4038f4e"),
                            CheckInDate = new DateTime(2025, 2, 28, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(541),
                            CheckOutDate = new DateTime(2025, 3, 5, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(542),
                            RoomId = new Guid("b7e342e3-78f8-4efa-9220-96057a4a9235"),
                            UserId = new Guid("f4b02a34-0e59-4cf8-90b6-de80d09f5bf8")
                        },
                        new
                        {
                            Id = new Guid("cf0a9a8a-a797-4cad-861f-8f083a2fcae1"),
                            CheckInDate = new DateTime(2025, 2, 24, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(545),
                            CheckOutDate = new DateTime(2025, 3, 6, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(545),
                            RoomId = new Guid("52cd8e0e-157c-4fdd-b58b-ab1a77025328"),
                            UserId = new Guid("f4b02a34-0e59-4cf8-90b6-de80d09f5bf8")
                        },
                        new
                        {
                            Id = new Guid("86987b2e-9bc9-416f-992f-876a02c73a5a"),
                            CheckInDate = new DateTime(2025, 2, 28, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(547),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(548),
                            RoomId = new Guid("fd7057b0-3173-4830-8d91-60b12588cc5f"),
                            UserId = new Guid("aa3f6bb0-ce24-41c0-a8a8-23faacf8601b")
                        },
                        new
                        {
                            Id = new Guid("6283b8f4-685f-4f1e-ae86-6ed93a3bb1ef"),
                            CheckInDate = new DateTime(2025, 2, 23, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(553),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(553),
                            RoomId = new Guid("8850cdd5-0693-4b41-978c-0868310f85bd"),
                            UserId = new Guid("aa3f6bb0-ce24-41c0-a8a8-23faacf8601b")
                        },
                        new
                        {
                            Id = new Guid("ec46bc45-055a-4425-9176-c4eae3950b01"),
                            CheckInDate = new DateTime(2025, 2, 24, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(555),
                            CheckOutDate = new DateTime(2025, 3, 7, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(556),
                            RoomId = new Guid("02ca5ab3-879d-43ee-8011-cfb9645e0eb0"),
                            UserId = new Guid("bad94b84-51b7-4149-8c7b-47f58cb97216")
                        },
                        new
                        {
                            Id = new Guid("a60929cb-5e8c-4531-8829-51d5a5a5dac7"),
                            CheckInDate = new DateTime(2025, 2, 21, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(558),
                            CheckOutDate = new DateTime(2025, 3, 7, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(559),
                            RoomId = new Guid("1251b1d1-a62c-4e91-80cc-7e3af0d0487f"),
                            UserId = new Guid("bad94b84-51b7-4149-8c7b-47f58cb97216")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MessageStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e71b5313-b1f2-4022-9e50-006c8b34a81b"),
                            Message = "Amazing stay! AliceSmith had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(622),
                            Rating = 4,
                            UserId = new Guid("a751c353-65a2-4071-908f-eaac110f174a")
                        },
                        new
                        {
                            Id = new Guid("fff76c67-2d40-40ad-a71d-2d4ad647ae06"),
                            Message = "Amazing stay! BobJohnson had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(627),
                            Rating = 5,
                            UserId = new Guid("7113759c-a0b6-426a-a198-eef3138f180b")
                        },
                        new
                        {
                            Id = new Guid("1ce4f88f-9d45-4449-bb00-50cf2a6212ce"),
                            Message = "Amazing stay! CharlieBrown had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(630),
                            Rating = 5,
                            UserId = new Guid("f4b02a34-0e59-4cf8-90b6-de80d09f5bf8")
                        },
                        new
                        {
                            Id = new Guid("bbc4cf9c-1413-4dd6-a661-d6ebeea961e4"),
                            Message = "Amazing stay! DianaWhite had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(633),
                            Rating = 3,
                            UserId = new Guid("aa3f6bb0-ce24-41c0-a8a8-23faacf8601b")
                        },
                        new
                        {
                            Id = new Guid("c818d597-779b-4775-94ea-fc1044c04cba"),
                            Message = "Amazing stay! EdwardBlack had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 6, 1, 266, DateTimeKind.Utc).AddTicks(636),
                            Rating = 3,
                            UserId = new Guid("bad94b84-51b7-4149-8c7b-47f58cb97216")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelOazis.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a8738e1-49b3-4bc7-a66c-2b288553a186"),
                            Description = "Cozy single room with a city view.",
                            IsAvailable = true,
                            Number = 101,
                            Picture = "Resources/singleRoom1.jpg",
                            Price = 80.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a29813fb-af91-4a35-94dd-d3a9cd79cbcc"),
                            Description = "Spacious double room with modern amenities.",
                            IsAvailable = true,
                            Number = 102,
                            Picture = "Resources/doubleRoom.jpg",
                            Price = 120.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("868e8158-15af-4e66-bfb9-b587bcbd0341"),
                            Description = "Luxury suite with a king-sized bed and ocean view.",
                            IsAvailable = true,
                            Number = 103,
                            Picture = "Resources/tripleRoom1.jpg",
                            Price = 200.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("41f40c30-c38d-4226-910b-a0732e5f2d7d"),
                            Description = "Comfortable single room with free Wi-Fi.",
                            IsAvailable = true,
                            Number = 104,
                            Picture = "Resources/singleRoom2.jpg",
                            Price = 75.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b7e342e3-78f8-4efa-9220-96057a4a9235"),
                            Description = "Elegant double room with a balcony.",
                            IsAvailable = true,
                            Number = 105,
                            Picture = "Resources/doubleRoom2.jpg",
                            Price = 130.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("52cd8e0e-157c-4fdd-b58b-ab1a77025328"),
                            Description = "Premium suite with a private hot tub.",
                            IsAvailable = true,
                            Number = 106,
                            Picture = "Resources/quadRoom.jpg",
                            Price = 220.00m,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("fd7057b0-3173-4830-8d91-60b12588cc5f"),
                            Description = "Modern single room with a work desk.",
                            IsAvailable = true,
                            Number = 107,
                            Picture = "Resources/singleRoom3.jpg",
                            Price = 85.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("8850cdd5-0693-4b41-978c-0868310f85bd"),
                            Description = "Stylish double room with a city skyline view.",
                            IsAvailable = true,
                            Number = 108,
                            Picture = "Resources/doubleRoom3.jpg",
                            Price = 140.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("02ca5ab3-879d-43ee-8011-cfb9645e0eb0"),
                            Description = "Exclusive suite with a private lounge area.",
                            IsAvailable = true,
                            Number = 109,
                            Picture = "Resources/familyRoom.jpg",
                            Price = 250.00m,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("1251b1d1-a62c-4e91-80cc-7e3af0d0487f"),
                            Description = "Charming double room with artistic decor.",
                            IsAvailable = true,
                            Number = 110,
                            Picture = "Resources/doubleRoom4.jpg",
                            Price = 135.00m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e97adc4-c99e-428c-bc30-b16fb7894225"),
                            Description = "Relaxing full-body spa experience.",
                            Name = "Spa Treatment"
                        },
                        new
                        {
                            Id = new Guid("d6c4923e-5106-4cf4-bbc6-1c7df4691566"),
                            Description = "Unlimited access to our state-of-the-art fitness center.",
                            Name = "Gym Access"
                        },
                        new
                        {
                            Id = new Guid("2b4efcc2-43d0-4526-b909-a34c71a6119e"),
                            Description = "Convenient transport to and from the airport.",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            Id = new Guid("6e878fa7-45d9-4ab5-b4b2-60eb9678179d"),
                            Description = "Delicious breakfast with a variety of options.",
                            Name = "Breakfast Buffet"
                        },
                        new
                        {
                            Id = new Guid("f7a1a02e-6306-46a1-910e-0a64c95c3d20"),
                            Description = "24/7 room service with gourmet meals.",
                            Name = "Room Service"
                        },
                        new
                        {
                            Id = new Guid("0ff5f592-9d21-40b5-8aba-e30853ba565b"),
                            Description = "Same-day laundry and dry-cleaning services.",
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = new Guid("d66fb193-2365-4183-8906-0c790c00cf59"),
                            Description = "Guided tour of local attractions.",
                            Name = "City Tour"
                        },
                        new
                        {
                            Id = new Guid("0a277483-efb7-4a0a-90bc-ea94b67394c2"),
                            Description = "High-speed internet available in all areas.",
                            Name = "Wi-Fi Access"
                        },
                        new
                        {
                            Id = new Guid("4145eeed-83a8-4a07-89aa-de1e8bf373f4"),
                            Description = "Fully equipped meeting and conference facilities.",
                            Name = "Conference Room"
                        },
                        new
                        {
                            Id = new Guid("602a96fe-cf84-45fe-ae7a-9465112384ba"),
                            Description = "Access to our indoor heated pool.",
                            Name = "Swimming Pool"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a751c353-65a2-4071-908f-eaac110f174a"),
                            Age = 28,
                            AvatarUrl = "Resources/womanAvatar.jpg",
                            Email = "alice@example.com",
                            Password = "hashedpassword",
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("7113759c-a0b6-426a-a198-eef3138f180b"),
                            Age = 35,
                            AvatarUrl = "Resources/manAvatar.jpg",
                            Email = "bob@example.com",
                            Password = "hashedpassword",
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("f4b02a34-0e59-4cf8-90b6-de80d09f5bf8"),
                            Age = 40,
                            AvatarUrl = "Resources/womanAvatar.jpg",
                            Email = "charlie@example.com",
                            Password = "hashedpassword",
                            Username = "CharlieBrown"
                        },
                        new
                        {
                            Id = new Guid("aa3f6bb0-ce24-41c0-a8a8-23faacf8601b"),
                            Age = 30,
                            AvatarUrl = "Resources/womanAvatar.jpg",
                            Email = "diana@example.com",
                            Password = "hashedpassword",
                            Username = "DianaWhite"
                        },
                        new
                        {
                            Id = new Guid("bad94b84-51b7-4149-8c7b-47f58cb97216"),
                            Age = 33,
                            AvatarUrl = "Resources/manAvatar.jpg",
                            Email = "edward@example.com",
                            Password = "hashedpassword",
                            Username = "EdwardBlack"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.HasOne("HotelOazis.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.HasOne("HotelOazis.Models.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
