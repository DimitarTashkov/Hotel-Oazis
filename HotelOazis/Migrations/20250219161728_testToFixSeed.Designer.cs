// <auto-generated />
using System;
using HotelOazis.Models.DbConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelOazis.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20250219161728_testToFixSeed")]
    partial class testToFixSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("062d7ca3-eb81-403b-bda3-179b562a2d42"),
                            CheckInDate = new DateTime(2025, 2, 28, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9695),
                            CheckOutDate = new DateTime(2025, 3, 4, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9707),
                            RoomId = new Guid("0617f41a-28e9-4cba-b3b1-2d9f870006e2"),
                            UserId = new Guid("66845820-77b6-42a7-86da-48d5a0cceddb")
                        },
                        new
                        {
                            Id = new Guid("430caa84-7584-4de4-bb16-853bc2df60ec"),
                            CheckInDate = new DateTime(2025, 2, 22, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9713),
                            CheckOutDate = new DateTime(2025, 3, 10, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9713),
                            RoomId = new Guid("fbb6d60e-61d7-4e9b-81d8-dcd4fbbcdaf1"),
                            UserId = new Guid("66845820-77b6-42a7-86da-48d5a0cceddb")
                        },
                        new
                        {
                            Id = new Guid("47ecf625-14d2-473e-8b5a-6fe67da56c93"),
                            CheckInDate = new DateTime(2025, 2, 25, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9716),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9716),
                            RoomId = new Guid("cf62803b-5741-423b-90d5-fd70d40db155"),
                            UserId = new Guid("1bea04f7-0b83-4466-9e7b-9ede5ee22c04")
                        },
                        new
                        {
                            Id = new Guid("c06bd730-378b-4248-9fa8-4cb898f9d7ff"),
                            CheckInDate = new DateTime(2025, 2, 21, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9718),
                            CheckOutDate = new DateTime(2025, 3, 9, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9718),
                            RoomId = new Guid("3f139227-9fb9-4394-a5b9-7053064aa97f"),
                            UserId = new Guid("1bea04f7-0b83-4466-9e7b-9ede5ee22c04")
                        },
                        new
                        {
                            Id = new Guid("1a6d430d-1e99-4b45-b7ef-7416741b410a"),
                            CheckInDate = new DateTime(2025, 2, 25, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9720),
                            CheckOutDate = new DateTime(2025, 3, 5, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9721),
                            RoomId = new Guid("33d254dc-746f-4485-b029-f6a6223068ee"),
                            UserId = new Guid("c6deb7a6-f8cd-4f32-8e60-4d56988d243c")
                        },
                        new
                        {
                            Id = new Guid("2218441e-c534-4e6f-a19f-3a1179c07e8e"),
                            CheckInDate = new DateTime(2025, 2, 26, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9775),
                            CheckOutDate = new DateTime(2025, 3, 6, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9775),
                            RoomId = new Guid("9ce523d8-f6e0-437c-b367-d04f49e8b739"),
                            UserId = new Guid("c6deb7a6-f8cd-4f32-8e60-4d56988d243c")
                        },
                        new
                        {
                            Id = new Guid("47230278-304a-457e-8220-be3dde1c6104"),
                            CheckInDate = new DateTime(2025, 2, 27, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9777),
                            CheckOutDate = new DateTime(2025, 3, 4, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9778),
                            RoomId = new Guid("94771e5d-5686-45ad-88d5-fa9d60a703e5"),
                            UserId = new Guid("a8ee301e-35e9-49b7-baa4-59e826eef00f")
                        },
                        new
                        {
                            Id = new Guid("dd9d1499-5dc7-4cc4-a3b6-5497012ccc91"),
                            CheckInDate = new DateTime(2025, 2, 21, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9783),
                            CheckOutDate = new DateTime(2025, 3, 2, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9783),
                            RoomId = new Guid("efba83a0-8572-4721-bd8b-e6879be3e31b"),
                            UserId = new Guid("a8ee301e-35e9-49b7-baa4-59e826eef00f")
                        },
                        new
                        {
                            Id = new Guid("8b78d0e5-0b3f-479e-9801-e03b5fa0a3c8"),
                            CheckInDate = new DateTime(2025, 2, 23, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9785),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9786),
                            RoomId = new Guid("ae7cfc55-7e2d-4ff9-b5bb-df17ea169db7"),
                            UserId = new Guid("9c68104f-86e1-4e91-9970-91c21dff19d2")
                        },
                        new
                        {
                            Id = new Guid("7c798069-ff66-4a7a-aeae-d369ddcc6e83"),
                            CheckInDate = new DateTime(2025, 2, 20, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9789),
                            CheckOutDate = new DateTime(2025, 3, 4, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9789),
                            RoomId = new Guid("0ca732f4-fc2a-41ce-8aa6-d23c1157ce30"),
                            UserId = new Guid("9c68104f-86e1-4e91-9970-91c21dff19d2")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MessageStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fc7a994-0788-40ed-a90e-fd6820fd221c"),
                            Message = "Amazing stay! AliceSmith had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9848),
                            Rating = 3,
                            UserId = new Guid("66845820-77b6-42a7-86da-48d5a0cceddb")
                        },
                        new
                        {
                            Id = new Guid("6b6219a9-ff68-48e0-8324-8abf5a105709"),
                            Message = "Amazing stay! BobJohnson had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9853),
                            Rating = 4,
                            UserId = new Guid("1bea04f7-0b83-4466-9e7b-9ede5ee22c04")
                        },
                        new
                        {
                            Id = new Guid("3e1be673-fd21-4bb3-8693-b3449bd2c5bd"),
                            Message = "Amazing stay! CharlieBrown had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9856),
                            Rating = 5,
                            UserId = new Guid("c6deb7a6-f8cd-4f32-8e60-4d56988d243c")
                        },
                        new
                        {
                            Id = new Guid("512f6cd7-ac2c-4138-9dd8-df95cd5f6c06"),
                            Message = "Amazing stay! DianaWhite had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9858),
                            Rating = 3,
                            UserId = new Guid("a8ee301e-35e9-49b7-baa4-59e826eef00f")
                        },
                        new
                        {
                            Id = new Guid("2c0d1bb7-6fbd-42ce-81ed-6e2cddcb10e4"),
                            Message = "Amazing stay! EdwardBlack had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 17, 27, 666, DateTimeKind.Utc).AddTicks(9860),
                            Rating = 3,
                            UserId = new Guid("9c68104f-86e1-4e91-9970-91c21dff19d2")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelOazis.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0617f41a-28e9-4cba-b3b1-2d9f870006e2"),
                            Description = "Cozy single room with a city view.",
                            IsAvailable = true,
                            Number = 101,
                            Picture = "Resources\\singleRoom1.jpg",
                            Price = 80.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("fbb6d60e-61d7-4e9b-81d8-dcd4fbbcdaf1"),
                            Description = "Spacious double room with modern amenities.",
                            IsAvailable = true,
                            Number = 102,
                            Picture = "Resources\\doubleRoom.jpg",
                            Price = 120.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("cf62803b-5741-423b-90d5-fd70d40db155"),
                            Description = "Luxury suite with a king-sized bed and ocean view.",
                            IsAvailable = true,
                            Number = 103,
                            Picture = "Resources\\tripleRoom1.jpg",
                            Price = 200.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("3f139227-9fb9-4394-a5b9-7053064aa97f"),
                            Description = "Comfortable single room with free Wi-Fi.",
                            IsAvailable = true,
                            Number = 104,
                            Picture = "Resources\\singleRoom2.jpg",
                            Price = 75.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("33d254dc-746f-4485-b029-f6a6223068ee"),
                            Description = "Elegant double room with a balcony.",
                            IsAvailable = true,
                            Number = 105,
                            Picture = "Resources\\doubleRoom2.jpg",
                            Price = 130.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("9ce523d8-f6e0-437c-b367-d04f49e8b739"),
                            Description = "Premium suite with a private hot tub.",
                            IsAvailable = true,
                            Number = 106,
                            Picture = "Resources\\quadRoom.jpg",
                            Price = 220.00m,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("94771e5d-5686-45ad-88d5-fa9d60a703e5"),
                            Description = "Modern single room with a work desk.",
                            IsAvailable = true,
                            Number = 107,
                            Picture = "Resources\\singleRoom3.jpg",
                            Price = 85.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("efba83a0-8572-4721-bd8b-e6879be3e31b"),
                            Description = "Stylish double room with a city skyline view.",
                            IsAvailable = true,
                            Number = 108,
                            Picture = "Resources\\doubleRoom3.jpg",
                            Price = 140.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ae7cfc55-7e2d-4ff9-b5bb-df17ea169db7"),
                            Description = "Exclusive suite with a private lounge area.",
                            IsAvailable = true,
                            Number = 109,
                            Picture = "Resources\\familyRoom.jpg",
                            Price = 250.00m,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("0ca732f4-fc2a-41ce-8aa6-d23c1157ce30"),
                            Description = "Charming double room with artistic decor.",
                            IsAvailable = true,
                            Number = 110,
                            Picture = "Resources\\doubleRoom4.jpg",
                            Price = 135.00m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0c9e877-1eca-4ce2-99d3-d2979fa1f490"),
                            Description = "Relaxing full-body spa experience.",
                            Name = "Spa Treatment"
                        },
                        new
                        {
                            Id = new Guid("acbfa524-c66b-40a5-a319-3603bbd2b613"),
                            Description = "Unlimited access to our state-of-the-art fitness center.",
                            Name = "Gym Access"
                        },
                        new
                        {
                            Id = new Guid("025aeb44-2606-4f10-9ab7-6ce7fe2a3d04"),
                            Description = "Convenient transport to and from the airport.",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            Id = new Guid("597faf59-d72d-4215-9f34-933f778be4eb"),
                            Description = "Delicious breakfast with a variety of options.",
                            Name = "Breakfast Buffet"
                        },
                        new
                        {
                            Id = new Guid("a3b996fe-0a69-4077-af78-94ca72f31346"),
                            Description = "24/7 room service with gourmet meals.",
                            Name = "Room Service"
                        },
                        new
                        {
                            Id = new Guid("e6fe14a8-d619-44fd-b43e-f623e651ac04"),
                            Description = "Same-day laundry and dry-cleaning services.",
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = new Guid("313c974e-73d9-4229-ae58-12c456ceedca"),
                            Description = "Guided tour of local attractions.",
                            Name = "City Tour"
                        },
                        new
                        {
                            Id = new Guid("3eb58096-5b1f-4e72-a1f8-82166c0c851b"),
                            Description = "High-speed internet available in all areas.",
                            Name = "Wi-Fi Access"
                        },
                        new
                        {
                            Id = new Guid("78a5ef2b-caa3-4233-94b4-defbf6940b0d"),
                            Description = "Fully equipped meeting and conference facilities.",
                            Name = "Conference Room"
                        },
                        new
                        {
                            Id = new Guid("e1ca0d37-ec45-4592-972d-82911e22ec59"),
                            Description = "Access to our indoor heated pool.",
                            Name = "Swimming Pool"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66845820-77b6-42a7-86da-48d5a0cceddb"),
                            Age = 28,
                            AvatarUrl = "Resources/womanAvatar.jpg",
                            Email = "alice@example.com",
                            Password = "hashedpassword",
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("1bea04f7-0b83-4466-9e7b-9ede5ee22c04"),
                            Age = 35,
                            AvatarUrl = "Resources/manAvatar.jpg",
                            Email = "bob@example.com",
                            Password = "hashedpassword",
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("c6deb7a6-f8cd-4f32-8e60-4d56988d243c"),
                            Age = 40,
                            AvatarUrl = "Resources/womanAvatar.jpg",
                            Email = "charlie@example.com",
                            Password = "hashedpassword",
                            Username = "CharlieBrown"
                        },
                        new
                        {
                            Id = new Guid("a8ee301e-35e9-49b7-baa4-59e826eef00f"),
                            Age = 30,
                            AvatarUrl = "Resources/womanAvatar.jpg",
                            Email = "diana@example.com",
                            Password = "hashedpassword",
                            Username = "DianaWhite"
                        },
                        new
                        {
                            Id = new Guid("9c68104f-86e1-4e91-9970-91c21dff19d2"),
                            Age = 33,
                            AvatarUrl = "Resources/manAvatar.jpg",
                            Email = "edward@example.com",
                            Password = "hashedpassword",
                            Username = "EdwardBlack"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.HasOne("HotelOazis.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.HasOne("HotelOazis.Models.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
