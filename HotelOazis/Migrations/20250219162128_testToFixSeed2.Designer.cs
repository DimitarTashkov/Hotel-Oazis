// <auto-generated />
using System;
using HotelOazis.Models.DbConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelOazis.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20250219162128_testToFixSeed2")]
    partial class testToFixSeed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f746c8ba-dd92-437e-adcf-fc65ea53aa7d"),
                            CheckInDate = new DateTime(2025, 2, 27, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7517),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7526),
                            RoomId = new Guid("7ed93fd5-6d28-484c-8880-c13e0917ab35"),
                            UserId = new Guid("3c09d145-d50f-486e-8cb0-2b21294a046a")
                        },
                        new
                        {
                            Id = new Guid("4c0805ab-2521-4e4e-8813-a0c7f035488a"),
                            CheckInDate = new DateTime(2025, 2, 26, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7533),
                            CheckOutDate = new DateTime(2025, 3, 8, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7534),
                            RoomId = new Guid("15cb8e5b-7313-40a3-8f8c-c3cccbd50bef"),
                            UserId = new Guid("3c09d145-d50f-486e-8cb0-2b21294a046a")
                        },
                        new
                        {
                            Id = new Guid("132ab175-0fb1-4b5e-a77d-3b6de589bb9a"),
                            CheckInDate = new DateTime(2025, 2, 20, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7541),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7541),
                            RoomId = new Guid("15a7c6a7-8239-42d8-806c-655f605dce69"),
                            UserId = new Guid("e7ece209-c47c-4eac-a6c8-678e4e84adc0")
                        },
                        new
                        {
                            Id = new Guid("d0fac5ef-4901-4d48-a955-ccd11d1575fc"),
                            CheckInDate = new DateTime(2025, 2, 25, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7543),
                            CheckOutDate = new DateTime(2025, 3, 9, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7544),
                            RoomId = new Guid("72a8a9b6-8435-4c1a-b428-3cfc23c7fcd7"),
                            UserId = new Guid("e7ece209-c47c-4eac-a6c8-678e4e84adc0")
                        },
                        new
                        {
                            Id = new Guid("da40efcc-1cfd-4cc5-9d14-25248b546374"),
                            CheckInDate = new DateTime(2025, 2, 27, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7546),
                            CheckOutDate = new DateTime(2025, 3, 7, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7546),
                            RoomId = new Guid("e8a3dac9-f1c5-4774-a57a-09bd54a56832"),
                            UserId = new Guid("2dde81e4-b591-4a9c-b4c2-ad4f7e4452ad")
                        },
                        new
                        {
                            Id = new Guid("86406fec-5a54-4222-a467-7b988c4c22ed"),
                            CheckInDate = new DateTime(2025, 2, 25, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7550),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7550),
                            RoomId = new Guid("99578e1c-3a58-4ad1-80bb-fabe0f05f17c"),
                            UserId = new Guid("2dde81e4-b591-4a9c-b4c2-ad4f7e4452ad")
                        },
                        new
                        {
                            Id = new Guid("14cf4903-1cfe-41dd-a8ba-549b64e73980"),
                            CheckInDate = new DateTime(2025, 2, 22, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7552),
                            CheckOutDate = new DateTime(2025, 3, 3, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7552),
                            RoomId = new Guid("c796934f-577d-4c24-802c-74ac4b538b97"),
                            UserId = new Guid("0ef71de1-d96e-4373-b887-2bcf9873e039")
                        },
                        new
                        {
                            Id = new Guid("0d6d83f2-a279-4b96-bfb1-5fb6e9f6f7c2"),
                            CheckInDate = new DateTime(2025, 2, 21, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7554),
                            CheckOutDate = new DateTime(2025, 3, 10, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7555),
                            RoomId = new Guid("3e0e3776-0aa5-49f2-88bb-fa60b24633a3"),
                            UserId = new Guid("0ef71de1-d96e-4373-b887-2bcf9873e039")
                        },
                        new
                        {
                            Id = new Guid("d3a126e0-8a5e-42ce-9bc6-7f5b725859d4"),
                            CheckInDate = new DateTime(2025, 2, 24, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7557),
                            CheckOutDate = new DateTime(2025, 3, 10, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7557),
                            RoomId = new Guid("50fb31b2-e1eb-4b25-9585-7e64ecccf8bc"),
                            UserId = new Guid("d97dec4c-0779-4dff-8030-d0151ab90893")
                        },
                        new
                        {
                            Id = new Guid("2d662845-2956-4102-872c-9839b2a52efc"),
                            CheckInDate = new DateTime(2025, 2, 22, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7560),
                            CheckOutDate = new DateTime(2025, 3, 5, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7560),
                            RoomId = new Guid("a33d23fa-fdad-4bd5-b69d-26f81d08f841"),
                            UserId = new Guid("d97dec4c-0779-4dff-8030-d0151ab90893")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MessageStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af0331b4-cda0-489a-b05f-2e0affa5ff3b"),
                            Message = "Amazing stay! AliceSmith had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7701),
                            Rating = 4,
                            UserId = new Guid("3c09d145-d50f-486e-8cb0-2b21294a046a")
                        },
                        new
                        {
                            Id = new Guid("c2406aae-692a-4adc-a8d1-2a51994711d2"),
                            Message = "Amazing stay! BobJohnson had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7706),
                            Rating = 4,
                            UserId = new Guid("e7ece209-c47c-4eac-a6c8-678e4e84adc0")
                        },
                        new
                        {
                            Id = new Guid("074b69a4-9f25-45a0-9839-febba35b30c7"),
                            Message = "Amazing stay! CharlieBrown had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7708),
                            Rating = 4,
                            UserId = new Guid("2dde81e4-b591-4a9c-b4c2-ad4f7e4452ad")
                        },
                        new
                        {
                            Id = new Guid("7170a99e-4459-4029-ad81-1dd9010d39bb"),
                            Message = "Amazing stay! DianaWhite had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7711),
                            Rating = 3,
                            UserId = new Guid("0ef71de1-d96e-4373-b887-2bcf9873e039")
                        },
                        new
                        {
                            Id = new Guid("5e159d34-7f36-4e6b-b12f-d1c3ae1ae66c"),
                            Message = "Amazing stay! EdwardBlack had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 2, 19, 16, 21, 27, 364, DateTimeKind.Utc).AddTicks(7713),
                            Rating = 3,
                            UserId = new Guid("d97dec4c-0779-4dff-8030-d0151ab90893")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelOazis.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ed93fd5-6d28-484c-8880-c13e0917ab35"),
                            Description = "Cozy single room with a city view.",
                            IsAvailable = true,
                            Number = 101,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\singleRoom1.jpg",
                            Price = 80.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("15cb8e5b-7313-40a3-8f8c-c3cccbd50bef"),
                            Description = "Spacious double room with modern amenities.",
                            IsAvailable = true,
                            Number = 102,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\doubleRoom.jpg",
                            Price = 120.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("15a7c6a7-8239-42d8-806c-655f605dce69"),
                            Description = "Luxury suite with a king-sized bed and ocean view.",
                            IsAvailable = true,
                            Number = 103,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\tripleRoom1.jpg",
                            Price = 200.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("72a8a9b6-8435-4c1a-b428-3cfc23c7fcd7"),
                            Description = "Comfortable single room with free Wi-Fi.",
                            IsAvailable = true,
                            Number = 104,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\singleRoom2.jpg",
                            Price = 75.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("e8a3dac9-f1c5-4774-a57a-09bd54a56832"),
                            Description = "Elegant double room with a balcony.",
                            IsAvailable = true,
                            Number = 105,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\doubleRoom2.jpg",
                            Price = 130.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("99578e1c-3a58-4ad1-80bb-fabe0f05f17c"),
                            Description = "Premium suite with a private hot tub.",
                            IsAvailable = true,
                            Number = 106,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\quadRoom.jpg",
                            Price = 220.00m,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("c796934f-577d-4c24-802c-74ac4b538b97"),
                            Description = "Modern single room with a work desk.",
                            IsAvailable = true,
                            Number = 107,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\singleRoom3.jpg",
                            Price = 85.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("3e0e3776-0aa5-49f2-88bb-fa60b24633a3"),
                            Description = "Stylish double room with a city skyline view.",
                            IsAvailable = true,
                            Number = 108,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\doubleRoom3.jpg",
                            Price = 140.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("50fb31b2-e1eb-4b25-9585-7e64ecccf8bc"),
                            Description = "Exclusive suite with a private lounge area.",
                            IsAvailable = true,
                            Number = 109,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\familyRoom.jpg",
                            Price = 250.00m,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("a33d23fa-fdad-4bd5-b69d-26f81d08f841"),
                            Description = "Charming double room with artistic decor.",
                            IsAvailable = true,
                            Number = 110,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\doubleRoom4.jpg",
                            Price = 135.00m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7f84e6e-f2c9-4d28-895a-0611c4f80d4b"),
                            Description = "Relaxing full-body spa experience.",
                            Name = "Spa Treatment"
                        },
                        new
                        {
                            Id = new Guid("4b656658-cf07-4f77-aa17-ad9caad8e390"),
                            Description = "Unlimited access to our state-of-the-art fitness center.",
                            Name = "Gym Access"
                        },
                        new
                        {
                            Id = new Guid("7228c461-5e67-44b4-8545-016dbfb8d41b"),
                            Description = "Convenient transport to and from the airport.",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            Id = new Guid("7be92357-e907-4815-a4b6-3015555454e0"),
                            Description = "Delicious breakfast with a variety of options.",
                            Name = "Breakfast Buffet"
                        },
                        new
                        {
                            Id = new Guid("fc3ea2d4-431a-4333-a5aa-706397589c08"),
                            Description = "24/7 room service with gourmet meals.",
                            Name = "Room Service"
                        },
                        new
                        {
                            Id = new Guid("4843aaff-2900-4acd-b652-bd9f7da168bf"),
                            Description = "Same-day laundry and dry-cleaning services.",
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = new Guid("2a7b2280-8906-4c20-ade2-6ce1d9700618"),
                            Description = "Guided tour of local attractions.",
                            Name = "City Tour"
                        },
                        new
                        {
                            Id = new Guid("a0271a19-87fb-4e17-b446-543f82ffe363"),
                            Description = "High-speed internet available in all areas.",
                            Name = "Wi-Fi Access"
                        },
                        new
                        {
                            Id = new Guid("d5a6378c-e7ef-4d10-99b6-344328548287"),
                            Description = "Fully equipped meeting and conference facilities.",
                            Name = "Conference Room"
                        },
                        new
                        {
                            Id = new Guid("9f077465-1987-43a7-9e20-08994d17d671"),
                            Description = "Access to our indoor heated pool.",
                            Name = "Swimming Pool"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c09d145-d50f-486e-8cb0-2b21294a046a"),
                            Age = 28,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\womanAvatar.jpg",
                            Email = "alice@example.com",
                            Password = "hashedpassword",
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("e7ece209-c47c-4eac-a6c8-678e4e84adc0"),
                            Age = 35,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\manAvatar.jpg",
                            Email = "bob@example.com",
                            Password = "hashedpassword",
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("2dde81e4-b591-4a9c-b4c2-ad4f7e4452ad"),
                            Age = 40,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\womanAvatar.jpg",
                            Email = "charlie@example.com",
                            Password = "hashedpassword",
                            Username = "CharlieBrown"
                        },
                        new
                        {
                            Id = new Guid("0ef71de1-d96e-4373-b887-2bcf9873e039"),
                            Age = 30,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\womanAvatar.jpg",
                            Email = "diana@example.com",
                            Password = "hashedpassword",
                            Username = "DianaWhite"
                        },
                        new
                        {
                            Id = new Guid("d97dec4c-0779-4dff-8030-d0151ab90893"),
                            Age = 33,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\bin\\Debug\\net8.0-windows\\Resources\\manAvatar.jpg",
                            Email = "edward@example.com",
                            Password = "hashedpassword",
                            Username = "EdwardBlack"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.HasOne("HotelOazis.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.HasOne("HotelOazis.Models.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
