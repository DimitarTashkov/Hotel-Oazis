// <auto-generated />
using System;
using HotelOazis.Models.DbConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelOazis.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20250310210446_testToFixSeed3")]
    partial class testToFixSeed3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72dc62d0-b51f-4779-b02f-dbc86ea15aa7"),
                            CheckInDate = new DateTime(2025, 3, 12, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2703),
                            CheckOutDate = new DateTime(2025, 3, 27, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2710),
                            RoomId = new Guid("d882fecd-4047-43dc-a47d-010541ffcce0"),
                            UserId = new Guid("e2eaf91d-124f-46fb-9503-43939fb9026b")
                        },
                        new
                        {
                            Id = new Guid("e38701f9-9fab-424b-aebc-2593e13806af"),
                            CheckInDate = new DateTime(2025, 3, 12, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2715),
                            CheckOutDate = new DateTime(2025, 3, 22, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2715),
                            RoomId = new Guid("c43b4bae-81a5-472c-bb91-ec308f19af2c"),
                            UserId = new Guid("e2eaf91d-124f-46fb-9503-43939fb9026b")
                        },
                        new
                        {
                            Id = new Guid("caf089cf-4a38-459f-88e4-79529bc6b353"),
                            CheckInDate = new DateTime(2025, 3, 18, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2717),
                            CheckOutDate = new DateTime(2025, 3, 26, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2718),
                            RoomId = new Guid("c28064b3-e0b7-4a28-9a52-9ac4cf9953ea"),
                            UserId = new Guid("76894076-8074-4db0-86d4-7edd4fb69484")
                        },
                        new
                        {
                            Id = new Guid("58564acf-7d26-49da-85b8-40b15043f2ad"),
                            CheckInDate = new DateTime(2025, 3, 16, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2720),
                            CheckOutDate = new DateTime(2025, 3, 25, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2720),
                            RoomId = new Guid("da09cb3d-9cd9-412c-8ce6-d384f335bb83"),
                            UserId = new Guid("76894076-8074-4db0-86d4-7edd4fb69484")
                        },
                        new
                        {
                            Id = new Guid("619bedf4-3f5d-4a42-9bb6-832532a157f1"),
                            CheckInDate = new DateTime(2025, 3, 16, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2722),
                            CheckOutDate = new DateTime(2025, 3, 22, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2722),
                            RoomId = new Guid("4deddfad-47ef-4186-885a-6ba00f3075f4"),
                            UserId = new Guid("b5fe45ce-cd83-4093-82be-72e8b95deb31")
                        },
                        new
                        {
                            Id = new Guid("3afa5a1c-0cb8-482a-a962-005d04275b4c"),
                            CheckInDate = new DateTime(2025, 3, 12, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2725),
                            CheckOutDate = new DateTime(2025, 3, 22, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2726),
                            RoomId = new Guid("8a3d96eb-df23-4651-9b71-3f44fab59d3f"),
                            UserId = new Guid("b5fe45ce-cd83-4093-82be-72e8b95deb31")
                        },
                        new
                        {
                            Id = new Guid("98b7c879-edd0-4b47-8c07-d3d7c1e8b2c3"),
                            CheckInDate = new DateTime(2025, 3, 15, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2728),
                            CheckOutDate = new DateTime(2025, 3, 26, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2728),
                            RoomId = new Guid("fe7a7a29-074a-462b-afdc-75b2fcfc62e9"),
                            UserId = new Guid("a4b88f2c-8e57-485d-bdcb-a4c70e7b1d0e")
                        },
                        new
                        {
                            Id = new Guid("9943b652-0b0d-4212-ace9-626178817c6d"),
                            CheckInDate = new DateTime(2025, 3, 17, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2733),
                            CheckOutDate = new DateTime(2025, 3, 29, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2733),
                            RoomId = new Guid("80b43ac7-4c5f-4539-9b94-85d3f66aaf2b"),
                            UserId = new Guid("a4b88f2c-8e57-485d-bdcb-a4c70e7b1d0e")
                        },
                        new
                        {
                            Id = new Guid("676b7b41-71ce-4b40-aa81-35f8c84de5b2"),
                            CheckInDate = new DateTime(2025, 3, 15, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2735),
                            CheckOutDate = new DateTime(2025, 3, 23, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2736),
                            RoomId = new Guid("e0e1c9f5-4bee-4d5d-ae36-ce19da53cb37"),
                            UserId = new Guid("6c7635b3-4ac3-4632-9583-b665c6f8eac3")
                        },
                        new
                        {
                            Id = new Guid("7ee9e9b6-3b24-4657-95f5-f5165005f10d"),
                            CheckInDate = new DateTime(2025, 3, 19, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2739),
                            CheckOutDate = new DateTime(2025, 3, 22, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2739),
                            RoomId = new Guid("d68bcd5f-000e-459a-8755-6baa90c71e3f"),
                            UserId = new Guid("6c7635b3-4ac3-4632-9583-b665c6f8eac3")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MessageStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d55299e0-3cb5-497a-8654-da6bc55c91b8"),
                            Message = "Amazing stay! AliceSmith had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 3, 10, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2800),
                            Rating = 5,
                            UserId = new Guid("e2eaf91d-124f-46fb-9503-43939fb9026b")
                        },
                        new
                        {
                            Id = new Guid("a85ae2af-3fd8-41db-903f-361245ce8d02"),
                            Message = "Amazing stay! BobJohnson had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 3, 10, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2804),
                            Rating = 5,
                            UserId = new Guid("76894076-8074-4db0-86d4-7edd4fb69484")
                        },
                        new
                        {
                            Id = new Guid("de50f482-75fd-4d45-98ba-a5c2f80ab05b"),
                            Message = "Amazing stay! CharlieBrown had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 3, 10, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2807),
                            Rating = 4,
                            UserId = new Guid("b5fe45ce-cd83-4093-82be-72e8b95deb31")
                        },
                        new
                        {
                            Id = new Guid("381d1416-5485-4c02-bc10-77dd323f4560"),
                            Message = "Amazing stay! DianaWhite had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 3, 10, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2809),
                            Rating = 4,
                            UserId = new Guid("a4b88f2c-8e57-485d-bdcb-a4c70e7b1d0e")
                        },
                        new
                        {
                            Id = new Guid("b98179f4-d4b6-4254-b685-761408a32340"),
                            Message = "Amazing stay! EdwardBlack had a wonderful experience.",
                            MessageStatus = 0,
                            PublishedOn = new DateTime(2025, 3, 10, 21, 4, 45, 235, DateTimeKind.Utc).AddTicks(2812),
                            Rating = 4,
                            UserId = new Guid("6c7635b3-4ac3-4632-9583-b665c6f8eac3")
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelOazis.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d882fecd-4047-43dc-a47d-010541ffcce0"),
                            Description = "Cozy single room with a city view.",
                            IsAvailable = true,
                            Number = 101,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\singleRoom1.jpg",
                            Price = 80.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c43b4bae-81a5-472c-bb91-ec308f19af2c"),
                            Description = "Spacious double room with modern amenities.",
                            IsAvailable = true,
                            Number = 102,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\doubleRoom.jpg",
                            Price = 120.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("c28064b3-e0b7-4a28-9a52-9ac4cf9953ea"),
                            Description = "Luxury suite with a king-sized bed and ocean view.",
                            IsAvailable = true,
                            Number = 103,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\tripleRoom1.jpg",
                            Price = 200.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("da09cb3d-9cd9-412c-8ce6-d384f335bb83"),
                            Description = "Comfortable single room with free Wi-Fi.",
                            IsAvailable = true,
                            Number = 104,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\singleRoom2.jpg",
                            Price = 75.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4deddfad-47ef-4186-885a-6ba00f3075f4"),
                            Description = "Elegant double room with a balcony.",
                            IsAvailable = true,
                            Number = 105,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\doubleRoom2.jpg",
                            Price = 130.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("8a3d96eb-df23-4651-9b71-3f44fab59d3f"),
                            Description = "Premium suite with a private hot tub.",
                            IsAvailable = true,
                            Number = 106,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\quadRoom.jpg",
                            Price = 220.00m,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("fe7a7a29-074a-462b-afdc-75b2fcfc62e9"),
                            Description = "Modern single room with a work desk.",
                            IsAvailable = true,
                            Number = 107,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\singleRoom3.jpg",
                            Price = 85.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("80b43ac7-4c5f-4539-9b94-85d3f66aaf2b"),
                            Description = "Stylish double room with a city skyline view.",
                            IsAvailable = true,
                            Number = 108,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\doubleRoom3.jpg",
                            Price = 140.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("e0e1c9f5-4bee-4d5d-ae36-ce19da53cb37"),
                            Description = "Exclusive suite with a private lounge area.",
                            IsAvailable = true,
                            Number = 109,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\familyRoom.jpg",
                            Price = 250.00m,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("d68bcd5f-000e-459a-8755-6baa90c71e3f"),
                            Description = "Charming double room with artistic decor.",
                            IsAvailable = true,
                            Number = 110,
                            Picture = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\doubleRoom4.jpg",
                            Price = 135.00m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8dc46eb6-f066-435e-9460-89f651f39e2c"),
                            Description = "Relaxing full-body spa experience.",
                            Name = "Spa Treatment"
                        },
                        new
                        {
                            Id = new Guid("084351f1-5a43-4c93-9f8a-a91d9c7a07b6"),
                            Description = "Unlimited access to our state-of-the-art fitness center.",
                            Name = "Gym Access"
                        },
                        new
                        {
                            Id = new Guid("8766b52b-5ffb-4218-9bfc-e3a3fe9dc0c6"),
                            Description = "Convenient transport to and from the airport.",
                            Name = "Airport Shuttle"
                        },
                        new
                        {
                            Id = new Guid("60001d98-db11-40c0-8f6a-7100f35018a1"),
                            Description = "Delicious breakfast with a variety of options.",
                            Name = "Breakfast Buffet"
                        },
                        new
                        {
                            Id = new Guid("2ae4400d-feb8-422a-ad38-048c9633f0ac"),
                            Description = "24/7 room service with gourmet meals.",
                            Name = "Room Service"
                        },
                        new
                        {
                            Id = new Guid("2653362b-e5b8-4ac8-ab2b-854223c3295c"),
                            Description = "Same-day laundry and dry-cleaning services.",
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = new Guid("668c20de-df47-49dd-a1d7-b853130943d7"),
                            Description = "Guided tour of local attractions.",
                            Name = "City Tour"
                        },
                        new
                        {
                            Id = new Guid("904c7622-cbb0-4385-ba25-be86d9a72f23"),
                            Description = "High-speed internet available in all areas.",
                            Name = "Wi-Fi Access"
                        },
                        new
                        {
                            Id = new Guid("58fedb43-8839-4882-a0f1-475e26c9887e"),
                            Description = "Fully equipped meeting and conference facilities.",
                            Name = "Conference Room"
                        },
                        new
                        {
                            Id = new Guid("cf20bfed-8041-4068-a1a2-26bb321e836f"),
                            Description = "Access to our indoor heated pool.",
                            Name = "Swimming Pool"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2eaf91d-124f-46fb-9503-43939fb9026b"),
                            Age = 28,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\womanAvatar.jpg",
                            Email = "alice@example.com",
                            Password = "hashedpassword",
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("76894076-8074-4db0-86d4-7edd4fb69484"),
                            Age = 35,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\manAvatar.jpg",
                            Email = "bob@example.com",
                            Password = "hashedpassword",
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("b5fe45ce-cd83-4093-82be-72e8b95deb31"),
                            Age = 40,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\womanAvatar.jpg",
                            Email = "charlie@example.com",
                            Password = "hashedpassword",
                            Username = "CharlieBrown"
                        },
                        new
                        {
                            Id = new Guid("a4b88f2c-8e57-485d-bdcb-a4c70e7b1d0e"),
                            Age = 30,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\womanAvatar.jpg",
                            Email = "diana@example.com",
                            Password = "hashedpassword",
                            Username = "DianaWhite"
                        },
                        new
                        {
                            Id = new Guid("6c7635b3-4ac3-4632-9583-b665c6f8eac3"),
                            Age = 33,
                            AvatarUrl = "C:\\Users\\mitko\\source\\repos\\HotelOazis\\HotelOazis\\Resources\\manAvatar.jpg",
                            Email = "edward@example.com",
                            Password = "hashedpassword",
                            Username = "EdwardBlack"
                        });
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelOazis.Models.Reservation", b =>
                {
                    b.HasOne("HotelOazis.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Review", b =>
                {
                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.UserRole", b =>
                {
                    b.HasOne("HotelOazis.Models.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelOazis.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelOazis.Models.Role", b =>
                {
                    b.Navigation("RolesUsers");
                });

            modelBuilder.Entity("HotelOazis.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
